// src/pages/AdminPage.tsx
import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Shield, Loader2, AlertCircle, Eye, EyeOff, Frown } from 'lucide-react';
import QuizForm from '../components/admin/QuizForm';
import { useAuthStore } from '../store/authStore';
import { useQuizStore } from '../store/quizStore';
import QuizCard from '../components/quiz/QuizCard';
import Alert from '../components/ui/Alert';
import Button from '../components/ui/Button';
import { QuizFilter } from '../types'; // Only import QuizFilter if needed for admin-specific filters

const AdminPage: React.FC = () => {
  const navigate = useNavigate();
  const { user, isInitialized } = useAuthStore();
  const { quizzes, loading, error, fetchQuizzes, updateQuizVisibility } = useQuizStore();

  const [updateLoading, setUpdateLoading] = useState<string | null>(null);

  useEffect(() => {
    if (isInitialized) {
      if (!user) {
        navigate('/login');
      } else if (!user.isAdmin) {
        navigate('/quizzes');
      } else {
        fetchQuizzes({}); // Fetch all quizzes for the admin dashboard
      }
    }
  }, [isInitialized, user, navigate, fetchQuizzes]);

  if (!user?.isAdmin) return null;

  const handleUpdateVisibility = async (quizId: string, currentVisibility: 'global' | 'private') => {
    const newVisibility = currentVisibility === 'global' ? 'private' : 'global';
    setUpdateLoading(quizId);
    try {
      await updateQuizVisibility(quizId, newVisibility);
    } catch (err) {
      console.error("Error toggling quiz visibility in component:", err);
    } finally {
      setUpdateLoading(null);
    }
  };

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div className="mb-8 flex items-center">
        <Shield className="h-8 w-8 text-sky-500 mr-3" />
        <div>
          <h1 className="text-3xl font-bold text-slate-800">Admin Dashboard</h1>
        </div>
      </div>

    

      <div className="bg-white shadow-sm rounded-lg p-6">
        <h2 className="text-xl font-semibold text-slate-800 mb-4">Manage Quizzes</h2>
        <p className="text-slate-600 mb-6">
          Review all quizzes generated by users and admins. Toggle their visibility to make them
          public or private.
        </p>

        {loading && (
          <div className="flex justify-center items-center py-10">
            <Loader2 className="h-8 w-8 animate-spin text-sky-500" />
            <span className="ml-3 text-lg text-slate-600">Loading quizzes for review...</span>
          </div>
        )}

        {error && (
          <Alert type="error" message={error} className="mt-4" icon={<AlertCircle className="h-5 w-5" />} />
        )}

        {!loading && !error && quizzes.length === 0 && (
          <div className="text-center py-10 text-slate-500">
            <Frown className="h-12 w-12 mx-auto mb-4 text-slate-400" />
            <p className="text-xl font-semibold mb-2">No quizzes to manage.</p>
            <p className="text-md">Generate some or wait for users to create them.</p>
          </div>
        )}

        {!loading && !error && quizzes.length > 0 && (
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {quizzes.map((quiz) => (
              <QuizCard
                key={quiz.id}
                quiz={quiz}
                // ⭐ PASS ADMIN CONTROLS AS A PROP ⭐
                adminControls={
                  <>
                    <div className="flex items-center justify-between text-sm text-slate-500 mb-1">
                      <span className="font-medium">
                        Visibility:{' '}
                        <span className={`font-bold ${quiz.visibility === 'global' ? 'text-green-600' : 'text-orange-600'}`}>
                          {quiz.visibility === 'global' ? 'Global' : 'Private'}
                        </span>
                      </span>
                      {updateLoading === quiz.id ? (
                        <Loader2 className="h-5 w-5 animate-spin text-sky-500" />
                      ) : quiz.visibility === 'private' ? (
                        <Button
                          variant="secondary"
                          size="sm"
                          onClick={() => handleUpdateVisibility(quiz.id, 'private')}
                          leftIcon={<Eye className="h-4 w-4" />}
                          className="ml-2"
                        >
                          Make Global
                        </Button>
                      ) : (
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() => handleUpdateVisibility(quiz.id, 'global')}
                          leftIcon={<EyeOff className="h-4 w-4" />}
                          className="ml-2"
                        >
                          Make Private
                        </Button>
                      )}
                    </div>
                    {/* Display createdBy (UID) for admin review */}
                    <p className="text-xs text-slate-400 mt-1 truncate">
                      Created by: {quiz.createdBy}
                    </p>
                  </>
                }
              />
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default AdminPage;