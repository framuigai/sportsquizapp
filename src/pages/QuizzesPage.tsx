// src/pages/QuizzesPage.tsx
import React, { useEffect, useState } from 'react';
import { AlertCircle, Loader2, BookOpenText } from 'lucide-react'; // Ensure Loader2 and BookOpenText are imported
import QuizCard from '../components/quiz/QuizCard';
import QuizFilter from '../components/quiz/QuizFilter'; // This component will need to respect new props
import Alert from '../components/ui/Alert'; // Assuming you have an Alert component for error display
import { useQuizStore } from '../store/quizStore';
import { QuizFilter as QuizFilterType } from '../types'; // Renamed to avoid conflict with component name

const QuizzesPage: React.FC = () => {
  const { quizzes, loading, error, fetchQuizzes } = useQuizStore();
  // State for additional filters (e.g., category, difficulty) that apply to global quizzes
  const [filter, setFilter] = useState<QuizFilterType>({});

  // Explanation 1: Initial Fetch for Global Quizzes
  // When the component mounts, or `fetchQuizzes` changes (though it's stable from Zustand),
  // we fetch quizzes. Crucially, we always include `visibility: 'global'` in the filter.
  // This makes `QuizzesPage` exclusively about global quizzes.
  useEffect(() => {
    // We merge the current filter state with `visibility: 'global'`.
    // This allows other filters (category, difficulty) to still be applied
    // while ensuring only global quizzes are ever fetched.
    fetchQuizzes({ ...filter, visibility: 'global' });
  }, [fetchQuizzes]); // Depend on fetchQuizzes only, as filter is handled by handleFilterChange

  // Explanation 2: Handling Filter Changes for Global Quizzes
  // This function is passed to the QuizFilter component.
  // When the user applies filters, this function is called with the `newFilter`.
  // Again, we ensure `visibility: 'global'` is *always* part of the fetch request.
  const handleFilterChange = (newFilter: QuizFilterType) => {
    setFilter(newFilter); // Update the local filter state
    // Fetch quizzes with the new filters, explicitly keeping visibility as 'global'.
    fetchQuizzes({ ...newFilter, visibility: 'global' });
  };

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div className="mb-8 flex flex-col sm:flex-row sm:justify-between sm:items-center">
        <div>
          <h1 className="text-3xl font-bold text-slate-800">
            <BookOpenText className="inline-block h-8 w-8 text-sky-500 mr-2 align-middle" />
            Global Quizzes
          </h1>
          {/* Explanation 3: Updated Descriptive Text */}
          {/* The description now clearly states that these are quizzes for everyone. */}
          <p className="text-slate-600 mt-2">
            Explore a wide range of quizzes generated by administrators for everyone to enjoy.
          </p>
        </div>
      </div>

      {/* Explanation 4: Configuring QuizFilter for Global View */}
      {/* We pass props `hideVisibilityFilter` and `hideCreatedByFilter` as `true`.
          This signals to the `QuizFilter` component that it should *not* display
          options to filter by visibility (as this page is fixed to 'global')
          or by creator (as global quizzes aren't filtered by individual creator).
          This is key to "removing generation UI" by adapting the filter component.
          You'll need to ensure your `QuizFilter` component handles these props. */}
      <QuizFilter
        onFilterChange={handleFilterChange}
        hideVisibilityFilter={true}
        hideCreatedByFilter={true}
      />

      {/* Explanation 5: Displaying Loading, Error, or No Quizzes */}
      {error && (
        <Alert
          type="error"
          message={error}
          className="mt-4"
          icon={<AlertCircle className="h-5 w-5" />}
        />
      )}

      {loading ? (
        <div className="flex justify-center items-center h-64">
          <Loader2 className="h-12 w-12 animate-spin text-sky-500" />
        </div>
      ) : quizzes.length === 0 ? (
        <div className="text-center py-12 bg-white rounded-lg shadow-sm">
          <h3 className="text-lg font-medium text-slate-900 mb-2">No global quizzes found</h3>
          <p className="text-slate-500">
            Try changing your filters or check back later for new global quizzes.
          </p>
        </div>
      ) : (
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {quizzes.map((quiz) => (
            <QuizCard key={quiz.id} quiz={quiz} />
          ))}
        </div>
      )}
    </div>
  );
};

export default QuizzesPage;